Valid Config file parameters are created from the base modules registering callbacks...

for example.. base_exec.c calls: 
    register_config("exec",base_exec_config,NULL);

which will register the <exec/> tag within an instance...  for example:
    <exec>/usr/local/bin/jlog.pl server</exec> [copy to STDIN of app]

this will call the  base_exec_config with the instance, the exec xmlnode, and ?? arg


following is a list of valid attributes of an instance:

<!--  GENERAL TAGS -->

<name/>
   Location: gen/base_name.c
   Description: Calls register_instance to join a hostname with this instance

<fork/>
   Location: gen/base_fork.c
   Description: [Enter Sane Description Here]

<!-- LOGGING OPTIONS -->

<to/>
   Location: gen/base_to.c
   Description: Used to copy a log entry to a jid ?? should this be located in log/ ??

<stderr/>
   Location: log/base_stderr.c
   Description: Copies the log packet to stderrfg 4

<notice/>
<warn/>
<alert/>
   Location: log/base_logtype.c
   Description: Filters out types of log packets for this instance

<format/>
   Location: log/base_format.c
   Description: Sets an alternate format for logging 

<file/>
   Location: log/base_file.c
   Description: Sets the destination file for a log instance

<!-- IO OPTIONS -->

<stdout/>
   Location: io/base_stdout.c
   Description: All packets for this instance get copied to stdout.. 
                also, this gets all packets on stdin

<load/>
   Location: io/base_load.c
   Description: Loads Shared objects into memory.. will load all subtags as well..
                The CDATA of the tags contains the fileneame to load

<exec/>
   Location: io/base_exec.c
   Description: Executes a file, and passes XML data from stdiin and stdout

<connect/>
   Lcoation: io/base_connect.c
   Desctiption: Makes a socket connection to an IP address on a given port, and passes the
                secret to the XML stream.. 

<accept/>
   Location: io/base_accept.c
   Description: Listens on a socket for an XML handshake, and starts an XML stream..
